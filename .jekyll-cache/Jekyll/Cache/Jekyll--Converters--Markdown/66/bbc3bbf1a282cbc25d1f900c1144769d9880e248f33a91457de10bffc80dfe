I"Ç<p><!-- wp:heading --></p>
<h2>Basics:</h2>
<p><!-- /wp:heading --></p>
<p><!-- wp:paragraph --></p>
<p>Let's assume we've just spun up a brand new cluster. The first thing we do is take a look at what storage classes we have available:</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:preformatted --></p>
<pre class="wp-block-preformatted"><strong>kubectl get sc
</strong>NAME                PROVISIONER                AGE
azurefile           kubernetes.io/azure-file   1d
default (default)   kubernetes.io/azure-disk   1d
managed-premium     kubernetes.io/azure-disk   1d</pre>
<p><!-- /wp:preformatted --></p>
<p><!-- wp:paragraph --></p>
<p>Now let's list any persistent volumes. Given this is a new cluster there probably won't be any:</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:preformatted --></p>
<pre class="wp-block-preformatted"><strong>kubectl get pv
</strong>No resources found.</pre>
<p><!-- /wp:preformatted --></p>
<p><!-- wp:paragraph --></p>
<p>To spin up a pod with some persistent storage, first we need to create a PersistentVolumeClaim:</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:preformatted --></p>
<pre class="wp-block-preformatted">cat &lt;&lt;EOF | kubectl create -f -
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: web-content
  namespace: web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
EOF</pre>
<p><!-- /wp:preformatted --></p>
<p><!-- wp:paragraph --></p>
<p>Let's check what Persistent Volumes and Persistent Volume Claims we have after running this:</p>
<p><!-- /wp:paragraph --></p>
<p><!-- wp:preformatted --></p>
<pre class="wp-block-preformatted"><strong>kubectl get pv</strong>
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                             STORAGECLASS   REASON    AGE
pvc-9f39f84a-c447-11e8-a296-ee934e0ae766   3Gi        RWO            Delete           Bound     web/web-content           default                  2s
</pre>
:ET