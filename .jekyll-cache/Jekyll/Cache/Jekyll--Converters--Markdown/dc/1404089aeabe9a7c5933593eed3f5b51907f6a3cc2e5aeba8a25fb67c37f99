I"ž<p>I had a slightly tricky issue recently whereby I needed to use a JQ expression as part of a local-exec.  The JQ expression needed quotes however Terraform wasnâ€™t happy with them.  It was a simple case of escaping with backslashes.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">resource <span class="s2">"null_resource"</span> <span class="s2">"confluent-kafka-env"</span> <span class="o">{</span>
  provisioner <span class="s2">"local-exec"</span> <span class="o">{</span>
    when <span class="o">=</span> <span class="s2">"destroy"</span>
    <span class="nb">command</span> <span class="o">=</span> <span class="s2">"ccloud environment list -o json | jq '.[] | select(.name | contains(</span><span class="se">\"</span><span class="k">${</span><span class="nv">var</span><span class="p">.env-name</span><span class="k">}</span><span class="se">\"</span><span class="s2">)) .id'"</span>
  <span class="o">}</span>
  provisioner <span class="s2">"local-exec"</span> <span class="o">{</span>
    <span class="nb">command</span> <span class="o">=</span> <span class="s2">"ccloud environment create </span><span class="k">${</span><span class="nv">var</span><span class="p">.env-name</span><span class="k">}</span><span class="s2"> -o json &gt;&gt; env_id.json"</span>
  <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<!--stackedit_data:
eyJoaXN0b3J5IjpbLTM4NDI1NjUwOV19
-->
:ET